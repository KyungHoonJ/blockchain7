yarn add react-router-dom query-string

Router : 경로 << 서버 내에서의 폴더 경로 << index.html이 있어서 해당 파일을 가져와서 브라우저에서 웹페이지를 출력했다.
React에서도 Router를 사용할 수 있다.
- React는 Front인데 Router는 Back이지 않은가?
  - 정답이다.
React(서버)에서 브라우저를 속인다.
- /로 라우터를 나누지? << 서버에서 해당 폴더로 이동하거나 API 값을 반환하거나 << React가 다 가져다가 사용한다.
- localhost:3000 << 자체까지만 서버에서 가져가고 '/' 이후로는 React에서 사용한다.
- HTML 파일 하나로 여러 HTML 파일을 사용하는 것처럼 보여줄 수 있다.

Multiple Page Application (MPA)
- 여러 페이지를 사용해서 웹 페이지를 서비스한다.
- 장점 : 하나의 페이지를 이동할 때 빠르다. 속도가 일정하다.
- 단점 : 깜빡인다. Javascript 로딩이 완료가 된 후에 기능한다.

Single Page Application (SPA)
- 하나의 페이지를 사용해서 웹 페이지를 서비스한다.
- React를 사용하는 이유 << React가 전형적인 SPA 제작 라이브러리이다.
- App 페이지가 하나일까? << 하나이다. >> React를 사용하면 App까지 개발이 가능하다.(React native 라이브러리)
- 장점 : 깜빡이지 않는다.
- 단점 : 홈페이지 진입 시 오래 걸린다. 단, 진입 후에는 빠르다.

Client Side Rendering (CSR)
- 브라우저 등 클라이언트 쪽에서 코드를 완성시킨다.
- 지금까지 우리가 한 방식이다.
- 장점 : 서버의 부하가 적다.
- 단점 : 클라이언트 성능에 따라서 사용자 경험(UX)가 떨어진다.

Server Side Rendering (SSR)
- 현재 수업에서 안나갔다.
- Templete 엔진이라는 기능을 사용해야 하는데 문제는 이 기능을 현재 협업에서 아예 사용을 안한다. 그리고 문법과 파일 위치 등이 완전히 달라진다.
- 장점 : 클라이언트 성능에 관계 없이 같은 속도의 웹 페이지를 서비스한다.
- 단점 : 사용자가 많아지면 서버가 터진다.